@page "/localidades"
@inject IGenericService<Localidad> LocalidadService
@inject NavigationManager NavigationManager
@inject SweetAlertService SweetAlert

<HeaderPage TitlePage="Localidades" />

@if (localidades == null)
{
    <p><em>Obteniendo lista de localidades...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var localidad in localidades)
            {
                <tr>
                    <td>@localidad.Id</td>
                    <td>@localidad.Nombre</td>
                    <td>
                        <a href="/editarlocalidad?idLocalidadEditada=@localidad.Id" class="btn btn-primary">Editar</a>
                    </td>
                    <td>
                        <button title="Eliminar" @onclick="()=>Eliminar(localidad)" class="btn btn-danger">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="AgregarLocalidad" class="btn btn-success">Agregar Localidad</button>

@code {
    private List<Localidad>? localidades;

    protected override async Task OnInitializedAsync()
    {
        localidades = await LocalidadService.GetAllAsync();
    }
    public void AgregarLocalidad()
    {
        NavigationManager.NavigateTo("/agregarlocalidad");
    }
    private async Task Eliminar(Localidad localidad)
    {
        SweetAlertResult respuesta = await SweetAlert.FireAsync(new SweetAlertOptions
        {
            Title = "Borrando Localidad",
            Text = $"¿Está seguro que desea borrar la localidad {localidad.Nombre}?",
            Icon = SweetAlertIcon.Warning,
            ShowCancelButton = true,
            ConfirmButtonText = "Sí, quiero borrarla",
            CancelButtonText = "No, espera"
        });

        if (respuesta.IsConfirmed)
        {
            await LocalidadService.DeleteAsync(localidad.Id);
            localidades = await LocalidadService.GetAllAsync();
            StateHasChanged();
        }
    }
}
