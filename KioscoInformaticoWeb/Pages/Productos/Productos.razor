@page "/productos"
@inject IGenericService<Producto> ProductoService
@inject NavigationManager NavigationManager
@inject SweetAlertService SweetAlert

<HeaderPage TitlePage="Productos" />

@if (productos == null)
{
    <p><em>Obteniendo lista de productos...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var producto in productos)
            {
                <tr>
                    <td>@producto.Id</td>
                    <td>@producto.Nombre</td>
                    <td>@producto.Precio.ToString("N2")</td>
                    <td>
                        <a href="/editarproducto?idproductoeditado=@producto.Id" class="btn btn-primary">Editar</a>
                    </td>
                    <td>
                        <button title="Eliminar" @onclick="()=>Eliminar(producto)" class="btn btn-danger">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="AgregarProducto" class="btn btn-success">Agregar Producto</button>


@code {
    private List<Producto>? productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await ProductoService.GetAllAsync();
    }

    public void AgregarProducto() => NavigationManager.NavigateTo("/agregarproducto");

    private async Task Eliminar(Producto producto)
    {
        SweetAlertResult respuesta = await SweetAlert.FireAsync(new SweetAlertOptions
        {
            Title = "Borrando Producto",
            Text = $"¿Está seguro que desea borrar el producto {producto.Nombre}?",
            Icon = SweetAlertIcon.Warning,
            ShowCancelButton = true,
            ConfirmButtonText = "Sí, quiero borrarlo",
            CancelButtonText = "No, espera",

        });

        if (respuesta.IsConfirmed)
        {
            await ProductoService.DeleteAsync(producto.Id);
            productos = await ProductoService.GetAllAsync();
            StateHasChanged();
        }
    }
}
