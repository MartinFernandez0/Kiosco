@page "/agregarcliente"
@inject IGenericService<Cliente> ClienteService
@inject NavigationManager NavigationManager

<HeaderPage TitlePage="Agregando un cliente" />

@if (cliente == null)
{
    <p><em>Cargando....</em></p>
}
else
{
    <EditForm Model="cliente" OnValidSubmit="GuardarCliente">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="Nombre">Nombre del Cliente</label>
            <InputText id="Nombre" class="form-control" @bind-Value="cliente.Nombre" />
        </div>

        <div class="form-group">
            <label for="Direccion">Dirección del Cliente</label>
            <InputText id="Direccion" class="form-control" @bind-Value="cliente.Direccion" />
        </div>

        <div class="form-group">
            <label for="Telefono">Teléfono del Cliente</label>
            <InputText id="Telefono" class="form-control" @bind-Value="cliente.Telefonos" />
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <ValidationSummary />
    </EditForm>
}

@code {
    [SupplyParameterFromQuery]
    [Parameter]
    public int? IdClienteAgregado { get; set; }

    private Cliente cliente = new Cliente();

    protected override async Task OnInitializedAsync()
    {
        if (IdClienteAgregado.HasValue && IdClienteAgregado.Value != 0)
        {
            cliente = await ClienteService.GetByIdAsync(IdClienteAgregado.Value);
        }
        else
        {
            cliente = new Cliente();
        }
    }

    private async Task GuardarCliente()
    {
        if (cliente.Id == 0)
        {
            await ClienteService.AddAsync(cliente);
        }
        else
        {

        }

        NavigationManager.NavigateTo("/clientes");
    }
}
